plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.singh.covidtracker'
    compileSdk 33
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))

    defaultConfig {
        applicationId "com.singh.covidtracker"
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "USE_MOCK", "false"
            buildConfigField("String", "API_KEY", localProperties['apiKey'])
            buildConfigField("String", "API_HOST", localProperties['apiHost'])
        }
        debug {
            buildConfigField "boolean", "USE_MOCK", "true"
            buildConfigField("String", "API_KEY", localProperties['apiKey'])
            buildConfigField("String", "API_HOST", localProperties['apiHost'])
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation "androidx.activity:activity-compose:$activity_version"
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.3.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$viewmodel_compose_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$viewmodel_compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$viewmodel_compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$viewmodel_compose_version"
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation 'androidx.test.ext:junit-ktx:1.1.3'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"
    testImplementation 'org.robolectric:robolectric:4.9'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    // mockk
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation "com.google.truth:truth:1.1.3"


    // 3rd party dependencies
    // Dagger
    implementation "com.google.dagger:hilt-android:$dagger_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // OkHttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:$okhttp_version"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // landscapist-glide
    implementation "com.github.skydoves:landscapist-glide:$landscapist_version"
    implementation "com.github.skydoves:landscapist-palette:$landscapist_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.caverock:androidsvg:$svg_version"

    // collapsing toolbar
    implementation "me.onebone:toolbar-compose:2.3.5"

    // Graph
    implementation 'com.github.jaikeerthick:Composable-Graphs:v1.0'
}

// Allow references to generated code -- added due to dagger
kapt {
    correctErrorTypes true
}